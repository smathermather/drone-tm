{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Drone Tasking Manager","text":"<p>Welcome to the docs!</p>"},{"location":"CONTRIBUTING/","title":"Contribution Guide","text":""},{"location":"INSTALL/","title":"Installation Guide","text":""},{"location":"timeline/","title":"Timeline","text":"<p>In reverse chronological order, with most recent events first.</p> <p> 2024-07 Field Testing in Bali         \ud83d\ude81 Field tests to nail down the flight plan generation, including         terrain following.          2024-06 Start of Software Development         \ud83d\udc68\ud83c\udffb\u200d\ud83d\udcbb NAXA &amp; HOT start software development, with particular focus         on the flight plan generation and task area division algorithm.          2024-05 Grant Awarded For Development         \ud83d\udcdd World Bank project for HOTOSM &amp; NAXA collaboration.          2024-xx Contract for Manufacture of Drones         \ud83d\udee0\ufe0f Contract agreed for the production of a small, lightweight,         and affordable Community Mapping Drone.          2023-09 Initial Research &amp; Concept         \ud83d\udd2c Concept Note written for a 'Drone Tasking Manager'.          </p>"},{"location":"about/about/","title":"\ud83d\udcd6 History","text":""},{"location":"about/faq/","title":"\u2753 Frequently Asked Questions \u2753","text":""},{"location":"about/team/","title":"The Drone TM Team","text":""},{"location":"dev/setup/","title":"Setting Up Drone TM For Development","text":"<p>Important</p> <p>You must have Docker and Docker Compose installed first.</p> <p>Docker install guide: https://docs.docker.com/engine/install</p> <p>Compose install guide: https://docs.docker.com/compose/install</p>"},{"location":"dev/setup/#optional-configure-google-oauth","title":"(Optional) Configure Google OAuth","text":"<ul> <li>Create a new client ID and secret in your Google account for OAuth2.</li> <li>Set the redirect URL to your local frontend URL, e.g. <code>http://localhost:3040/auth</code>.</li> </ul> <p>Note</p> <p>This step is only required to use the frontend.</p>"},{"location":"dev/setup/#configure-your-dotenv","title":"Configure Your Dotenv","text":"<ul> <li>There is an example <code>.env.example</code> file that can be copied:   <code>cp .env.example .env</code></li> <li>If you only plan on using the backend then everything should be   configured for you.</li> <li>Else, if you set up Google OAuth credentials, set the variables here:   <pre><code>GOOGLE_CLIENT_ID=\"YOUR_CLIENT_ID\"\nGOOGLE_CLIENT_SECRET=\"YOUR_CLIENT_SECRET\"\nGOOGLE_LOGIN_REDIRECT_URI=\"http://localhost:3040/auth\"\n</code></pre></li> </ul>"},{"location":"dev/setup/#build-the-containers","title":"Build The Containers","text":"<pre><code>docker compose build\n</code></pre>"},{"location":"dev/setup/#run-the-containers","title":"Run The Containers","text":"<p>This will also run ODM alongside DroneTM:</p> <pre><code>docker compose -f docker-compose.yml -f docker-compose.odm.yml up -d\n</code></pre>"},{"location":"dev/setup/#access-the-services","title":"Access The Services","text":"<p>DroneTM Backend: http://localhost:8000</p> <p>DroneTM Frontend: http://localhost:3040</p> <p>Web ODM: http://localhost:9900</p> <ul> <li>Default user: <code>admin</code></li> <li>Default password: <code>password</code></li> </ul> <p>Note the ports may be different if you changed them in the dotenv file.</p>"},{"location":"manuals/generate-flightplans/","title":"Generating Flightplans","text":""},{"location":"manuals/generate-flightplans/#manually-via-command-line","title":"Manually Via Command Line","text":"<ol> <li> <p>Calculate Flight Parameters:</p> <pre><code>python calculate_parameters.py \\\n    --forward_overlap 70 \\\n    --side_overlap 70 \\\n    --altitude_above_ground_level 115 \\\n    --image_interval 2\n</code></pre> <p>This will output a JSON that can be used in step 5 below.</p> </li> <li> <p>Creating Waypoints:</p> <pre><code>python waypoints.py \\\n    --project_geojson_polygon aoi.geojson \\\n    --altitude_above_ground_level 115 \\\n    --forward_overlap 70 \\\n    --side_overlap 70 \\\n    --generate_each_points \\\n    --take_off_point LON,LAT \\\n    --output_file_path ./waypoints.geojson\n</code></pre> </li> <li> <p>Add Eleveation Data From A DEM File:</p> <pre><code>python add_elevation_from_dem.py dsm.tif waypoints.geojson waypoints_with_elevation.geojson\n</code></pre> <p>Here we need a DEM in .tiff format.</p> </li> <li> <p>Create Placemark File (For KMZ File):</p> <pre><code>python create_placemarks.py \\\n    --waypoints_geojson waypoints_with_elevation.geojson \\\n    --parameters '{\"forward_photo_height\": 84.0, \"side_photo_width\": 149.0, \"forward_spacing\": 20.95, \"side_spacing\": 44.6, \"ground_speed\": 10.47, \"altitude_above_ground_level\": 115}' \\\n    --outfile placemarks.geojson\n</code></pre> </li> <li> <p>Create WMPL Flightplan:</p> <pre><code>python wpml.py \\\n    --placemark placemarks.geojson \\\n    --outfile flightplan.wpml\n</code></pre> </li> </ol>"}]}